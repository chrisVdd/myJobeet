proriétaire: c'est l'entité qui contient la référence (entity_id)

ONE-TO-ONE:

    > UNE NEWS est lieé à UNE IMAGE

        Dans NEWS (entité propriétaire):

        /**
        * @ORM\OneToOne(targetEntity="OC\PlatformBundle\Entity\Image", cascade={"persist"})
        */
        private $image;


--------------------------------------------------------------
MANY-TO-ONE:

    > UN POST est lieé à PLUSIEURS IMAGES

        Dans IMAGES (entité propriétaire):

        /**
        * @ORM\ManyToOne(targetEntity="OC\PlatformBundle\Entity\Post")
        * @ORM\JoinColumn(nullable=false)
        */
        private $post;

--------------------------------------------------------------
MANY-TO-MANY:

    > PLUSIEURS POST lié à PLUSIEURS CATEGORIES

            Dans POST (entité propriétaire):

            /**
            * @ORM\ManyToMany(targetEntity="OC\PlatformBundle\Entity\Category", cascade={"persist"})
            */
            private $categories;

            public function __construct()
            {
                $this->categories = new ArrayCollection();
            }

            public function addCategory(Category $category)
            {
                // Ici, on utilise l'ArrayCollection vraiment comme un tableau
                $this->categories[] = $category;
            }

            public function removeCategory(Category $category)
            {
                $this->categories->removeElement($category);
            }

            public function getCategories()
            {
                return $this->categories;
            }


--------------------------------------------------------------
MANY-TO-MANY avec attribut:

    > php bin/console doctrine:database:create

--------------------------------------------------------------
BIDIRECTIONNELLE

    > php bin/console doctrine:schema:create